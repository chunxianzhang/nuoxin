new Vue({
    el:".article",
    data:function(){
        return {
           signout:true,
           isLogin:false,
           uname:"",
           search_text:"",
           carCount:0,
           userCake:[],
           wishList:{one:'不需要',two:'生日快乐',three:'Happy Birthday'},
           success:false,
           cartBg:false,
           deleteItem:0,
           isAllCheck:0,
           pno:0,
           goods_i:0,
           checkedCount:0,
           allPrice:0,
           accessoriesList:[],
           accLeft:0,
           accright:1,
           clickCount:0,
           listLeft:0,
           loadCar:false,
           loadFooter:false,
        }
    },
    created(){
        axios.get("http://localhost:3000/user/islogin")
        .then((res)=>{
            var res=res.data
            if(res.ok==0){
                this.signout=true
                this.isLogin=false
            }else{
                this.signout=false
                this.isLogin=true
                this.uname=res.uname
            }
        })
        this.getCarCount()
        this.getUserCake()
        this.getAccessories()
    },
    methods:{
        goLogin(){
            var url=location.href
            location.href="http://localhost:3000/login.html?back="+url
        },
        signOut(){
            axios.get("http://localhost:3000/user/signout")
            .then((res)=>{
                location.reload(true)
            })
        },
        myIndent(){
            if(this.isLogin==true){
                location.href="index.html"
            }else{
                location.href="login.html"
            }
        },
        search(){
            var str=this.search_text
            str = str.replace(/\s*/g,"");
            if(str=="")
            str="雪域"
            location.href="product-search.html?kw="+str
        },
        shoppingCart(){
            if(this.isLogin==true){
                location.href="http://localhost:3000/shopping-car.html"
            }else{
                alert("请先登录")
                var url=location.href
                location.href="http://localhost:3000/login.html?back="+url
            }
        },
        getCarCount(){ 
            axios.get("http://localhost:3000/cart/getCount")
            .then((res)=>{
                if(res.data[0].count==""){
                    this.carCount=0
                    this.loadCar=true
                    this.loadFooter=true
                }else{
                    this.carCount=res.data[0].count
                    this.loadCar=true
                    this.loadFooter=true
                }
            })  
        },
        navItemOne(){
            location.href="http://localhost:3000/index.html"
        },
        navItemTwo(){
            location.href="http://localhost:3000/product-cake.html"
        },
        navItemThree(){
            location.href="http://localhost:3000/product-toast.html"
        },
        navItemFour(){
            location.href="http://localhost:3000/product-gift.html"
        },
        navItemFive(){
            location.href="http://localhost:3000/user.html"
        },
        CLUB(){},
        card(){},
        checked(i){
           for (res of this.userCake){
               if(res.goods_id==i){
                   if(res.isChecked==1){
                        res.isChecked=0
                        this.checkedCount-=res.count
                        this.allPrice-=res.count*res.price
                        axios.get("http://localhost:3000/cart/updateCheck?check="+res.isChecked+"&goods_id="+res.goods_id)
                        this.isAllCheck=0
                   }else{
                        res.isChecked=1
                        this.pno=0
                        this.checkedCount+=res.count
                        this.allPrice+=res.count*res.price
                        axios.get("http://localhost:3000/cart/updateCheck?check="+res.isChecked+"&goods_id="+res.goods_id)
                        for(item of this.userCake){
                            if(item.isChecked==0){
                                this.pno=1
                            }
                        }
                        if(this.pno==0){
                            this.isAllCheck=1
                        }
                   }
               }
           }
        },
        getUserCake(){
            axios("http://localhost:3000/cart/userCake")
            .then((res)=>{
                if(res.data.code==-1)return
                this.pno=0
                this.userCake=res.data
                for(item of this.userCake){
                    if(item.wishHint==null){
                        item.wishHint="填写生日祝福"
                    }
                    if(item.isChecked==0){
                        this.pno=1
                    }
                    if(item.isChecked==1){
                        this.checkedCount+=item.count
                        this.allPrice+=item.count*item.price
                    }
                }
                if(this.pno==0){
                    this.isAllCheck=1
                }
            })
        },
        getWish(i,j){
            for(item of this.userCake){
                if(item.goods_id==i){
                    if(j==1){
                        item.wishHint=this.wishList.one
                        item.showWish=0
                    }else if(j==2){
                        item.wishHint=this.wishList.two
                        item.showWish=0
                    }else if(j==3){
                        item.wishHint=this.wishList.three
                        item.showWish=0
                    }else{
                        item.wishHint=item.userWish
                        item.showWish=0
                    }
                }
            }
        },
        showWishList(i){
            for(item of this.userCake){
                if(item.goods_id==i){
                    item.showWish=1
                }
            }
        },
        a(i){
            for(item of this.userCake){
                if(item.goods_id==i){
                    item.showWish=1
                }
            }
        },
        hideWishList(i){
            for(item of this.userCake){
                if(item.goods_id==i){
                    item.showWish=0
                }
            }
        },
        addCount(i){
            for(item of this.userCake){
                if(item.goods_id==i){
                    item.count++
                    this.carCount++
					this.checkedCount++
                    this.allPrice+=item.price
                    axios.get("http://localhost:3000/cart/updateCount?count="+item.count+"&goods_id="+item.goods_id)
                }
            }
        },
        lessenCount(i){
            for(item of this.userCake){
                if(item.goods_id==i){
                    if(item.count==1){
                        this.success=true
                        this.cartBg=true
                        this.deleteItem=i
                    }else{
                        item.count--
                        this.carCount--
						this.checkedCount--
                        this.allPrice-=item.price
                        axios.get("http://localhost:3000/cart/updateCount?count="+item.count+"&goods_id="+item.goods_id)
                    }
                }
            }
        },
        closeCart2(){
            this.success=false
            this.cartBg=false
        },
        deleteGoods(){
            var j=this.deleteItem
            if(j!="all"){
                for(var i=0,len=this.userCake.length;i<len;i++){
                    if(this.userCake[i].goods_id==j){
                        this.goods_i=i
                        this.allPrice-=this.userCake[i].price
						this.checkedCount--
                        axios.get("http://localhost:3000/cart/deleteGoods?goods_id="+j)
                        .then((res)=>{
                            if(res.data.code==1){
                                this.carCount--
                                this.userCake.splice(this.goods_i,1)
                                i--
                                len--
                                this.success=false
                                this.cartBg=false
                            }
                        })
                    }
                }
            }else{
                axios.get("http://localhost:3000/cart/deleteAllGoods")
                .then((res)=>{
                    if(res.data.code==1)
                    this.carCount=0
					this.checkedCount=0
                    this.success=false
                    this.cartBg=false
                })
            }
        },
        AllChecked(){
            if(this.isAllCheck==0){
                axios.get("http://localhost:3000/cart/allChecked")
                .then((res)=>{
                    if(res.data.code==1){
                        this.checkedCount=0
                        this.allPrice=0
                        for(item of this.userCake){
                            item.isChecked=1
                            this.checkedCount+=item.count
                            this.allPrice+=item.count*item.price
                        }
                        this.isAllCheck=1
                    }
                })
            }else{
                axios.get("http://localhost:3000/cart/allNoChecked")
                .then((res)=>{
                    if(res.data.code==1){
                        for(item of this.userCake){
                            item.isChecked=0
                        }
                        this.isAllCheck=0
                        this.checkedCount=0
                        this.allPrice=0
                    }
                })
            }
        },
        deleteAllGoods(){
            this.deleteItem="all"
            this.success=true
            this.cartBg=true
        },
        getAccessories(){
            axios("http://localhost:3000/cart/getAccessories")
            .then((res)=>{
                this.accessoriesList=res.data
            })
        },
        accLeftShift(){
            if(this.listLeft<0){
                this.clickCount++
                this.listLeft=this.clickCount*925
                this.accright=1
                if(this.listLeft==0)
                this.accLeft=0
            }
        },
        accRightShift(){
            if(this.listLeft>-2775){
                this.accLeft=1
                this.clickCount--
                this.listLeft=this.clickCount*925
                if(this.listLeft==-2775)
                this.accright=0
            }
        },
    }
})